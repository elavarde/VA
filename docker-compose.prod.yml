services:
  traefik:
    image: traefik:v3
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports: ["80:80","443:443"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: ["--default-authentication-plugin=mysql_native_password","--innodb_flush_log_at_trx_commit=1"]
    volumes:
      - va_mysql_data_prod:/var/lib/mysql
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost","-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      retries: 10
    restart: always

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    environment: [ "IS_PERSISTENT=TRUE" ]
    volumes:
      - va_chroma_data_prod:${CHROMA_PERSIST}
    healthcheck:
      test: ["CMD","wget","-qO-","http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      retries: 20
    restart: always

  api:
    image: your-registry/va-api:latest
    environment:
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      CHROMA_URL: http://chroma:8000
      NODE_ENV: production
      PORT: ${API_PORT}
    depends_on:
      mysql: { condition: service_healthy }
      chroma: { condition: service_healthy }
    command: sh -c "npx prisma migrate deploy && node dist/server.js"
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.${DOMAIN_PROD}`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=le
      - traefik.http.services.api.loadbalancer.server.port=${API_PORT}
    restart: always

  front:
    image: nginx:alpine
    volumes:
      - ./front_dist:/usr/share/nginx/html:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.front.rule=Host(`app.${DOMAIN_PROD}`)
      - traefik.http.routers.front.entrypoints=websecure
      - traefik.http.routers.front.tls.certresolver=le
      - traefik.http.services.front.loadbalancer.server.port=80
    restart: always

  pyworker:
    image: your-registry/va-pyworker:latest
    environment:
      CHROMA_URL: http://chroma:8000
    depends_on:
      chroma: { condition: service_healthy }
    restart: always

  backup:
    image: restic/restic:latest
    environment:
      RESTIC_REPOSITORY: ${RESTIC_REPOSITORY}
      RESTIC_PASSWORD: ${RESTIC_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    volumes:
      - va_mysql_data_prod:/data/mysql:ro
      - va_chroma_data_prod:${CHROMA_PERSIST}:ro
    entrypoint: ["/bin/sh","-c"]
    command: >
      'restic backup /data &&
       restic forget --keep-daily 7 --keep-weekly 4 --keep-monthly 6 --prune &&
       sleep 3600'
    restart: unless-stopped

volumes:
  traefik_letsencrypt:
  va_mysql_data_prod:
  va_chroma_data_prod:
